language: c

before_install:
        # Identificando a distribuicao Linux para fins de LOG
        - cat /etc/*release | head
        # Utilitarios basicos para permitir o download, descompactacao e compilacao
        # de pacotes necessarios para a preparacao do ambiente
        #
        # Parte baseado em: https://github.com/akoeplinger/vagrant-mono-aspnetvnext/blob/master/Vagrantfile
        #
        - sudo apt-get -y install wget curl unzip git-core build-essential autoconf libtool gettext libgdiplus libgtk2.0-0 xsltproc > /dev/null
        # Baixando e compilando a ultima versao do mono via GitHub
        - git clone --depth=1 http://github.com/mono/mono > /dev/null
        - cd mono > /dev/null
        - git checkout mono-3.8.0-branch
        - ./autogen.sh --prefix=/usr/local --with-mcs-docs=no > /dev/null
        - make get-monolite-latest > /dev/null
        - make > /dev/null
        - sudo make install > /dev/null
        - cd .. > /dev/null
        # Instalando/atualizando os certificados SSL para habilitar as requisicoes HTTPS futuras
        - sudo mozroots --import --machine --sync > /dev/null
        - yes | sudo certmgr -ssl -m "https://www.myget.org" > /dev/null
        # Instalando o KVM (K Version Manager)
        - curl "https://raw.githubusercontent.com/aspnet/Home/master/kvminstall.sh" | sh && source ~/.kre/kvm/kvm.sh > /dev/null
        # Instalando o K Runtime Environment (KRE)
        - kvm install 1.0.0-alpha3 > /dev/null
        - kvm use 1.0.0-alpha3

script:
        - echo "Executing on mono version:"
        - mono --version
        - cd src/ > /dev/null
        - ls
        - kpm restore --source "https://www.myget.org/F/aspnetmaster/api/v2"
        - k run
        - kpm build
        - ls
        - ls bin
